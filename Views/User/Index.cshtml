@model IEnumerable<Product>
@{
	ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="~/css/Research.css" asp-append-version="true" />
<style>
	body {
		background-color: #ffe6ff; /* Light pink color for the entire body */
		height: 100vh;
		margin: 0;
	}

	
	.like-count {
		font-size: 14px; /* Ajustez la taille de la police selon vos besoins */
		font-weight: bold;
		margin-top: 5px; /* Ajustez la marge selon vos besoins */
	}


	.text-center {
		color: white; /* Set text color to be visible against the background */
	}

	.search-container {
		background-color: rgba(255, 255, 255, 0);
		padding: 20px; /* Add padding for better visibility */
		border-radius: 10px; /* Add border-radius for a rounded appearance */
	}

	.product-container {
		background-color: rgba(255, 255, 255, 0.8);
		padding: 20px;
		border-radius: 10px;
		margin-top: 20px;
	}

		.product-container h2 {
			color: #8B008B; /* Very dark pink color for the h2 */
		}

	.btn-research {
		background-color: #8B008B; /* Dark pink color for the button */
		color: white;
	}
</style>

<div class="text-center">
	<h1 class="display-4" style="font-style: italic; color: #8B008B;">Welcome to FashionFiesta !</h1>
</div>

<form class="search-container" asp-action="Search" asp-controller="User">
	<div class="d-flex align-items-center">
		<input size="30" placeholder="Search" type="search" name="name" class="mr-2" />
		<select name="CategoryId" class="form-control mr-2">
			<option value="">All Categories</option>
			@foreach (var category in ViewBag.Categories)
			{
				<option value="@category.Value">@category.Text</option>
			}
		</select>
		<button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
	</div>
</form>

<div class="product-container">
	<h2 class="text-center">Buy Our Products</h2>

	<div class="card-group">
		@foreach (var product in Model)
		{
			var photoPath = "~/images/" + (product.Image ?? "noimage.jpg");
			<div class="card m-3" style="min-width: 18rem; max-width:30.5%;">
				<div class="card-header">
					<h5><b> @product.Designation</b> </h5>
					<h5><b>Price : </b>@product.Price TND</h5>
					<h5><b>Quantity : </b> @product.Quantity</h5>
					<h5><b>Category : </b> @product.Category.CategoryName</h5>
					<span class="like-count" id="likeCount_@product.Id">Likes: 0</span>
				</div>
				<img class="card-img-top imageThumbnail" src="@photoPath" asp-append-version="true" />
				<div class="card-footer text-center">
					<a asp-controller="ShoppingCart" asp-action="AddToCart"
					   asp-route-productPath="@product.Image"
					   asp-route-productId="@product.Id"
					   asp-route-productName="@product.Designation"
					   asp-route-price="@product.Price"
					   asp-route-quantity="@product.Quantity"
						   
					   class="btn btn-primary m-1">Add to Cart</a>

					<a href="javascript:void(0);" onclick="likeProduct(@product.Id)" class="btn btn-primary m-1">Like</a>

				</div>

			</div>
		}
	</div>
</div>

<!-- Assurez-vous d'inclure jQuery dans votre page -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
	// Fonction pour envoyer une requête AJAX et mettre à jour le nombre de likes
	function likeProduct(productId) {
		// Simuler une requête AJAX (remplacez cela par votre logique réelle)
		// Vous pouvez également effectuer une véritable requête AJAX vers le serveur ici
		var newLikeCount = parseInt($('#likeCount_' + productId).text().split(': ')[1]) + 1;
		$('#likeCount_' + productId).text('Likes: ' + newLikeCount);
	}

	// Attacher un gestionnaire d'événements au bouton "Like"
	$(document).ready(function () {
		$('.like-button').on('click', function (event) {
			event.preventDefault();
			var productId = $(this).data('product-id');
			likeProduct(productId);
		});
	});
</script>

